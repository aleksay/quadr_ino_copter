#ifndef avrBrushlessPins_h
#define avrBrushlessPins_h

#include "avrUtils.h"
#include "comLogger.h"

#define PINS_NUM_STATES 6


/*
=====================================================
 
 		Mosfet Sequence Controller Section
 
 =====================================================
 */
 
//#define	automa_register_D
#define automa_register_B


#ifdef automa_register_D
#define AUTOMA_PIN_INIT DDRD |= 0b00111111 
#define AUTOMA_ITERATE(state) PORTD=states[state]
#define AUTOMA_OPEN_INVERTER PORTD=0b00000000
#endif

#ifdef automa_register_B
#define AUTOMA_PIN_INIT DDRB |= 0b00111111 
#define AUTOMA_ITERATE(state) PORTB=states[state]
#define AUTOMA_OPEN_INVERTER PORTB=0b00000000
#endif


//TODO interface so states are generated by brushless using macros representing pin offset in a register
#define W_HIGH_OFFSET 1
#define W_LOW_OFFSET 2
#define X_HIGH_OFFSET 3
#define X_LOW_OFFSET 4
#define Y_HIGH_OFFSET 5
#define Y_LOW_OFFSET 6
// we can generate each member of array like so: 0b00000000 |= (1<<W_HIGH_OFFSET) | (1<<X_LOW_OFFSET)
// the defines should be provided to brushless, and brushless will return the state arrays.

const uint8_t states[PINS_NUM_STATES] = {	
  0b00001010,
  0b00001100,
  0b00010100,
  0b00010001,
  0b00100001,
  0b00100010
 };


  int pins_init();
  int pins_getDirection();
  int pins_setDirection(int clockwise);
  void pins_commutePole();
  void pins_setOpenInverter();
  int pins_getState();
  int pins_setState(int _state);

#endif


